{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/chat/index.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport { MastraClient } from '@mastra/client-js';\nimport { useState, useEffect } from \"react\";\n\nexport default function MastraChat({ \n  agentId,\n  getToken, \n  onSubscribe,\n  initialMessage,\n  baseUrl\n}: { \n  agentId: string,\n  initialMessage?: string,\n  baseUrl?: string,\n  getToken?: () => Promise<string | null>, \n  onSubscribe?: () => Promise<{ message: string } | void> \n}) {\n  const [loading, setLoading] = useState(false);\n  // const [data, setData] = useState<string | null>(null);\n  const [error, setError] = useState('');\n  const [subscribing, setSubscribing] = useState(false);\n  // const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState<{ role: 'user' | 'assistant', content: string }[]>([]);\n  const [showSubscribePrompt, setShowSubscribePrompt] = useState(false);\n\n  // Show welcome message on initial load\n  useEffect(() => {\n    setChatHistory([\n      {\n        role: 'assistant',\n        content: initialMessage ?? \"Hi there! How can I help you today?\",\n      },\n    ]);\n  }, []);\n\n  const subscribe = async () => {\n    try {\n      setSubscribing(true);\n\n      const response = await onSubscribe?.()\n\n      setShowSubscribePrompt(false);\n      setChatHistory(prev => [\n        ...prev,\n        { role: 'assistant', content: response?.message ?? '✅ You are now subscribed!' }\n      ]);\n    } catch (error) {\n      setError((error as Error).message);\n    } finally {\n      setSubscribing(false);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n\n    const newUserMessage = { role: 'user' as const, content: message };\n    const updatedHistory = [...chatHistory, newUserMessage];\n\n    try {\n      setLoading(true);\n      setError('');\n      setMessage('');\n      setChatHistory(updatedHistory);\n\n      const token = await getToken?.();\n\n      if (!token) throw new Error('No token provided');\n\n      const client = new MastraClient({\n        baseUrl: baseUrl ?? 'http://localhost:4111', // Your Mastra API endpoint\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n\n      // await client.exchangeToken({ token });\n\n      const response = await client.getAgent(agentId).stream({\n        messages: updatedHistory,\n      });\n\n      let message = '';\n\n      setChatHistory(prev => [\n        ...prev,\n        { role: 'assistant', content: message },\n      ])\n\n      response.processDataStream({\n        onTextPart: (streamPart) => {\n          message += streamPart;\n          setChatHistory(prev => [\n            ...prev.slice(0, -1),\n            { role: 'assistant', content: message },\n          ]);\n        },\n      });\n\n      // setChatHistory(prev => [\n      //   ...prev,\n      //   { role: 'assistant', content: response.text },\n      // ]);\n    } catch (err) {\n      const errMsg = (err as Error).message;\n\n      if (\n        errMsg.toLowerCase().includes('unauthorized') ||\n        errMsg.toLowerCase().includes('403') ||\n        errMsg.toLowerCase().includes('401')\n      ) {\n        setShowSubscribePrompt(true);\n        setChatHistory(prev => [\n          ...prev,\n          {\n            role: 'assistant',\n            content:\n              \"🔒 It looks like you need to subscribe to access this agent. Please enter information below to subscribe.\",\n          },\n        ]);\n      } else {\n        setError(errMsg);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const SubscriptionForm = () => (\n    <div className=\"p-6 border rounded-lg shadow-sm bg-accent/30 dark:bg-gray-700 dark:border-gray-600 w-full max-w-md min-w-md mx-auto mt-4\">\n      <h3 className=\"text-lg font-medium mb-3 dark:text-gray-50\">🔐 Subscribe to Access</h3>\n      <p className=\"mb-4 dark:text-gray-200\">Enter your email to subscribe and continue chatting with our agent.</p>\n\n      <div className=\"mb-4\">\n        <input\n          type=\"email\"\n          placeholder=\"Your email address\"\n          // value={email}\n          // onChange={(e) => setEmail(e.target.value)}\n          className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-gray-50 dark:placeholder-gray-400\"\n        />\n      </div>\n\n      <button\n        onClick={subscribe}\n        disabled={subscribing}\n        className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 px-4 py-2 rounded-md dark:bg-blue-600 dark:hover:bg-blue-700 dark:text-white\"\n      >\n        {subscribing ? 'Processing...' : 'Subscribe Now'}\n      </button>\n\n      {error && <p className=\"text-red-500 dark:text-red-400 mt-2\">{error}</p>}\n    </div>\n  );\n\n  return (\n    <div className=\"flex flex-col h-[70vh] w-full max-w-md min-w-md mx-auto border rounded-lg overflow-hidden dark:border-gray-700 dark:bg-gray-800\">\n      <div className=\"bg-primary p-4 dark:bg-gray-700\">\n        <h2 className=\"text-white font-medium\">Mastra Chat</h2>\n      </div>\n\n      <div className=\"flex-1 p-4 overflow-y-auto bg-gray-50 dark:bg-gray-800\">\n        {chatHistory.map((msg, index) => (\n          <div\n            key={index}\n            className={`mb-4 ${msg.role === 'user' ? 'text-right' : 'text-left'}`}\n          >\n            <div\n              className={`inline-block p-3 rounded-lg max-w-[80%] ${\n                msg.role === 'user'\n                  ? 'bg-primary text-white rounded-br-none dark:bg-gray-700 dark:text-gray-50'\n                  : 'bg-gray-200 dark:bg-gray-600 dark:text-gray-50 rounded-bl-none'\n              }`}\n            >\n              {msg.content}\n            </div>\n          </div>\n        ))}\n\n        {showSubscribePrompt && <SubscriptionForm />}\n      </div>\n\n      <div className=\"border-t dark:border-gray-700 p-4 flex items-center dark:bg-gray-800\">\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Enter your message...\"\n          className=\"flex-1 p-2 border dark:border-gray-600 rounded-l-md focus:outline-none dark:bg-gray-700 dark:text-gray-50 dark:placeholder-gray-400\"\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n        />\n        <button\n          onClick={sendMessage}\n          disabled={loading || !message.trim()}\n          className=\"bg-primary text-white p-2 rounded-r-md dark:bg-blue-600 dark:hover:bg-blue-700\"\n        >\n          {loading ? '...' : 'Send'}\n        </button>\n      </div>\n\n      {error && <p className=\"text-red-500 dark:text-red-400 p-2 text-center\">{error}</p>}\n    </div>\n  );\n}\n"]}